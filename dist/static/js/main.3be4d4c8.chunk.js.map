{"version":3,"sources":["firebase/config.js","hooks/useAuth.js","comps/Navbar/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/layout/Dashboard.js","comps/auth/SignIn.js","comps/auth/SignUp.js","comps/auth/PrivateRoute.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectFirestore","projectStorage","projectAuth","timeStamp","FieldValue","serverTimestamp","login","email","password","signInWithEmailAndPassword","register","a","createUserWithEmailAndPassword","addUserDetails","firstName","lastName","currentUser","alert","doc","uid","set","intials","getCurrentUser","getInitials","get","initials","getUserDetails","withRouter","props","useState","setInitals","useEffect","then","val","logoutUser","signOut","history","push","links","id","className","to","onClick","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","data","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","s","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","Dashboard","setEmail","setPassword","currentTarget","value","onSubmit","preventDefault","replace","message","htmlFor","setFirstName","setLastName","PrivateRoute","Component","component","rest","render","App","firebaseInitialized","setFirebaseInitialized","Promise","resolve","onAuthStateChanged","exact","path","SignIn","SignUp","ReactDOM","StrictMode","document","getElementById"],"mappings":"wRAgBEA,gBAVmB,CACjBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAMT,IAAMC,EAAmBR,cACnBS,EAAkBT,YAClBU,EAAcV,SACdW,EAAWX,YAAmBY,WAAWC,gBCnBpCC,EAAQ,SAACC,EAAOC,GACzB,OAAON,EAAYO,2BAA2BF,EAAMC,IAS3CE,EAAQ,uCAAG,WAAOH,EAAOC,GAAd,SAAAG,EAAA,sEACdT,EAAYU,+BAA+BL,EAAOC,GADpC,2CAAH,wDAMRK,EAAiB,SAACC,EAAWC,GAItC,OAHIb,EAAYc,aACZC,MAAM,kBAEHjB,EAAiBkB,IAAjB,gBAA8BhB,EAAYc,YAAYG,MAAOC,IAAI,CACpEN,UAAUA,EACVC,SAASA,EACTM,QAAQP,EAAU,GAAGC,EAAS,MAYzBO,EAAiB,WAC1B,OAAOpB,EAAYc,aAAgBd,EAAYc,YAAYG,KAElDI,EAAW,uCAAG,4BAAAZ,EAAA,8DACPT,EAAYc,aADL,qCAC2BhB,EAAiBkB,IAAjB,gBAA8BhB,EAAYc,YAAYG,MAAOK,MADxF,iCACjBC,EADiB,uBAEhBvB,EAAYc,aAAgBS,EAASD,IAAI,YAFzB,2CAAH,qDAKXE,EAAc,uCAAG,4BAAAf,EAAA,8DACTT,EAAYc,aADH,qCACyBhB,EAAiBkB,IAAjB,gBAA8BhB,EAAYc,YAAYG,MAAOK,MADtF,iCACpBV,EADoB,uBAEnBZ,EAAYc,aAAgBF,EAAUU,IAAI,cAFvB,2CAAH,qDCCZG,eAzCD,SAACC,GAAU,MAGQC,mBAAS,IAHjB,mBAGhBJ,EAHgB,KAGNK,EAHM,KAOvBC,qBAAU,WACRR,IAAcS,MAAK,SAAAC,GACjBH,EAAWG,SAMf,IAAMC,EAAU,uCAAG,sBAAAvB,EAAA,sEDZVT,EAAYiC,UCYF,OAEjBP,EAAMQ,QAAQC,KAAK,UAFF,2CAAH,qDAMVC,EAAQhB,IACd,wBAAIiB,GAAG,aAAaC,UAAU,SAC5B,4BAAI,kBAAC,IAAD,CAASC,GAAG,IAAID,UAAU,mCAAmCf,GAAqB,OACtF,4BAAI,uBAAGiB,QAASR,GAAZ,cAEJ,wBAAIK,GAAG,aAAaC,UAAU,SAC5B,4BAAI,kBAAC,IAAD,CAASC,GAAG,UAAZ,UACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,aAAZ,YAGR,OACE,yBAAKD,UAAU,SACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAASC,GAAG,IAAID,UAAU,mBAA1B,cACCF,O,QCEMK,MAtCf,SAAoBC,GAAM,MAEUf,mBAAS,GAFnB,mBAEfgB,EAFe,KAELC,EAFK,OAGIjB,mBAAS,MAHb,mBAGfkB,EAHe,KAGRC,EAHQ,OAIAnB,mBAAS,MAJT,mBAIfoB,EAJe,KAIXC,EAJW,KAmCtB,OA3BAnB,qBAAU,WAEN,IAAMoB,EAAalD,EAAemD,IAAIR,EAAKS,MACrCC,EAAgBtD,EAAiBuD,WAAW,UAC5CvC,EAAcM,IACFI,IAGlByB,EAAWK,IAAIZ,GAAMa,GAAG,iBAAgB,SAACC,GAErC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAc,IAC7Df,EAAYa,MACb,SAACG,GAEAd,EAASc,KANb,sBAOG,gCAAAnD,EAAA,sEAEkBwC,EAAWY,iBAF7B,OAEOd,EAFP,OAGOe,EAAY7D,IACZgB,EAAMH,EAEZsC,EAAcW,IAAI,CAAChB,IAAIA,EAAKe,YAAU7C,QACtC+B,EAAOD,GAPR,8CAUL,CAACL,IAEI,CAAEC,WAAUI,MAAKF,U,QCnBbmB,MAjBf,YAAuC,IAAjBtB,EAAgB,EAAhBA,KAAMuB,EAAU,EAAVA,QAAU,EAEVxB,EAAWC,GAA5BC,EAF2B,EAE3BA,SAAUI,EAFiB,EAEjBA,IASjB,OANAlB,qBAAU,WACHkB,GACCkB,EAAQ,QAEd,CAAClB,EAAKkB,IACRC,QAAQC,IAAIxB,EAASI,GAEjB,kBAAC,IAAOqB,IAAR,CAAY9B,UAAU,eAAe+B,QAAS,CAACC,MAAO,GAAIC,QAAS,CAACD,MAAM3B,EAAW,QCuB9E6B,MApCf,WAAuB,IAAD,EAEM7C,mBAAS,MAFf,mBAEXe,EAFW,KAELuB,EAFK,OAGQtC,mBAAS,MAHjB,mBAGXkB,EAHW,KAGJC,EAHI,KAKZ2B,EAAQ,CAAC,YAAa,aAAc,aAc1C,OACI,kBAAC,WAAD,KACI,8BACI,2BAAOnC,UAAU,eACb,uCAAOoC,KAAK,OAAOpC,UAAU,YAAYqC,SAhBrC,SAAAC,GAChB,IAAIC,EAAWD,EAAEE,OAAOC,MAAM,GAE3BF,GAAYJ,EAAMO,SAASH,EAASH,OACnCT,EAAQY,GACR/B,EAAS,MAETmB,EAAQ,MACRnB,EAAS,0DAQD,YAA0E,gBAC1E,oCAEJ,yBAAKR,UAAU,SACVO,GAAS,yBAAKP,UAAU,SAASO,GACjCH,GAAQ,6BAAMA,EAAKS,MACnBT,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,EAAMuB,QAASA,Q,QCGhDgB,EA9BM,SAAC5B,GAAgB,IAAD,EAEV1B,mBAAS,IAFC,mBAE1BuD,EAF0B,KAErBC,EAFqB,KA0BjC,OAtBAtD,qBAAU,WAEN,IAAMuD,EAAOtF,EAAiBuD,WAAWA,GAEpCgC,QAAQ,YAAY,QAEpBC,YAAW,SAAC9B,GACT,IAAI+B,EAAY,GAChB/B,EAAKgC,SAAQ,SAAAxE,GAENI,MAAqBJ,EAAIyE,OAAOxE,KAC/BsE,EAAUpD,KAAV,2BAAmBnB,EAAIyE,QAAvB,IAA+BpD,GAAGrB,EAAIqB,SAKlD8C,EAAQI,MAGZ,OAAO,kBAAMH,OACd,CAAC/B,IAEG,CAAC6B,SCAGQ,EA1BG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACXT,EAASD,EAAa,UAAtBC,KAMR,OACE,yBAAK5C,UAAU,YACZ4C,GAAQA,EAAKU,KAAI,SAAA5E,GAAG,OACnB,kBAAC,IAAOoD,IAAR,CAAY9B,UAAU,WAAWuD,IAAK7E,EAAIqB,GACxCyD,QAAM,EACNC,WAAY,CAAEC,QAAS,GAAIC,GAAC,EAC5BzD,QAAS,kBAAMmD,EAAe3E,EAAI+B,OAElC,kBAAC,IAAOmD,IAAR,CAAYC,IAAKnF,EAAI+B,IAAKqD,IAAI,eAC5B/B,QAAS,CAAE2B,QAAS,GACpBzB,QAAS,CAAEyB,QAAS,GACpBK,WAAY,CAAEC,MAAO,WCClBC,EArBD,SAAC,GAAqC,IAAnCZ,EAAkC,EAAlCA,eAAgBa,EAAkB,EAAlBA,YAQ/B,OACE,kBAAC,IAAOpC,IAAR,CAAY9B,UAAU,WAAWE,QAPf,SAACoC,GACfA,EAAEE,OAAO2B,UAAUC,SAAS,aAC9Bf,EAAe,OAMftB,QAAS,CAAE2B,QAAS,GACpBzB,QAAS,CAAEyB,QAAS,IAEpB,kBAAC,IAAOE,IAAR,CAAYC,IAAKK,EAAaJ,IAAI,eAChC/B,QAAS,CAAEsC,EAAG,UACdpC,QAAS,CAAEoC,EAAG,OCQPC,MAlBf,WAAqB,MAEqBjF,mBAAS,MAF9B,mBAEV6E,EAFU,KAEGb,EAFH,KAIjB,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,MACA,yBAAKrD,UAAU,SACX,6CACA,kFAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWqD,eAAgBA,IAC1Ba,GAAe,kBAAC,EAAD,CAAOA,YAAaA,EAAab,eAAgBA,MCgD9DlE,mBAhEf,SAAgBC,GAAQ,IAAD,EAEOC,mBAAS,IAFhB,mBAEZtB,EAFY,KAELwG,EAFK,OAGalF,mBAAS,IAHtB,mBAGZrB,EAHY,KAGFwG,EAHE,OAIQnF,mBAAS,MAJjB,mBAIZkB,EAJY,KAILC,EAJK,KAOb6B,EAAU,SAAAC,GAAK,IAAD,EACOA,EAAEmC,cAAlB5D,EADS,EACTA,KAAO6D,EADE,EACFA,MACF,UAAT7D,EACC0D,EAASG,GACM,aAAT7D,GACN2D,EAAYE,IAMdC,EAAQ,uCAAG,WAAOrC,GAAP,SAAAnE,EAAA,6DACbmE,EAAEsC,iBADW,kBAIH9G,EAAMC,EAAOC,GAJV,OAKToB,EAAMQ,QAAQiF,QAAQ,KALb,gDAOTrE,EAAS,KAAMsE,SAPN,yDAAH,sDAkBd,OAEI,kBAAC,WAAD,KACA,kBAAC,EAAD,MACA,yBAAK9E,UAAU,aACX,wBAAIA,UAAU,eAAd,gBACA,0BAAMA,UAAU,QAAQ2E,SAAUA,GAC9B,yBAAK3E,UAAU,gBACX,2BAAO+E,QAAQ,SAAf,SACA,2BAAO3C,KAAK,QAAQvB,KAAK,QAAQb,UAAU,eAAe0E,MAAO3G,EAAOsE,SAAUA,KAEtF,yBAAKrC,UAAU,eACX,2BAAO+E,QAAQ,YAAf,YACA,2BAAO3C,KAAK,WAAWvB,KAAK,WAAWb,UAAU,eAAgB0E,MAAO1G,EAAUqE,SAAUA,KAEhG,yBAAKrC,UAAU,eACX,4BAAQoC,KAAK,SAASpC,UAAU,gCAAhC,SACA,yBAAKA,UAAU,mBACbO,EAAQ,2BAAKA,EAAL,KAAmB,OAGjC,uBAAGP,UAAU,yBAAb,2BAA6D,kBAAC,IAAD,CAAMC,GAAG,aAAT,mBCsB9Dd,mBA9Ef,SAAgBC,GAAQ,IAAD,EAEOC,mBAAS,IAFhB,mBAEZtB,EAFY,KAELwG,EAFK,OAGalF,mBAAS,IAHtB,mBAGZrB,EAHY,KAGFwG,EAHE,OAIenF,mBAAS,IAJxB,mBAIZf,EAJY,KAID0G,EAJC,OAKa3F,mBAAS,IALtB,mBAKZd,EALY,KAKF0G,EALE,OAMQ5F,mBAAS,MANjB,mBAMZkB,EANY,KAMLC,EANK,KASb6B,EAAU,SAAAC,GAAK,IAAD,EACOA,EAAEmC,cAAlB5D,EADS,EACTA,KAAO6D,EADE,EACFA,MACF,UAAT7D,EACC0D,EAASG,GACM,aAAT7D,EACN2D,EAAYE,GACE,cAAP7D,EACPmE,EAAaN,GACG,aAAT7D,GACPoE,EAAYP,IAMdC,EAAQ,uCAAG,WAAOrC,GAAP,SAAAnE,EAAA,6DACbmE,EAAEsC,iBADW,kBAIH1G,EAASH,EAAMC,GAJZ,uBAKHK,EAAeC,EAAWC,GALvB,OAMTa,EAAMQ,QAAQiF,QAAQ,KANb,gDAUTrE,EAAS,KAAMsE,SAVN,yDAAH,sDAmBd,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,MACA,yBAAK9E,UAAU,aACP,wBAAIA,UAAU,eAAd,YACA,0BAAMA,UAAU,QAAQ2E,SAAUA,GAClC,yBAAK3E,UAAU,gBACP,2BAAO+E,QAAQ,aAAf,cACA,2BAAO3C,KAAK,OAAOvB,KAAK,YAAYb,UAAU,eAAgB0E,MAAOpG,EAAW+D,SAAUA,KAE9F,yBAAKrC,UAAU,gBACX,2BAAO+E,QAAQ,YAAf,aACA,2BAAO3C,KAAK,OAAOvB,KAAK,WAAWb,UAAU,eAAe0E,MAAOnG,EAAU8D,SAAUA,KAE3F,yBAAKrC,UAAU,gBACX,2BAAO+E,QAAQ,SAAf,SACA,2BAAO3C,KAAK,QAAQvB,KAAK,QAAQb,UAAU,eAAgB0E,MAAO3G,EAAOsE,SAAUA,KAEvF,yBAAKrC,UAAU,eACX,2BAAO+E,QAAQ,YAAf,YACA,2BAAO3C,KAAK,WAAWvB,KAAK,WAAWb,UAAU,eAAgB0E,MAAO1G,EAAWqE,SAAUA,KAEjG,yBAAKrC,UAAU,eACX,4BAAQoC,KAAK,SAASpC,UAAU,gCAAhC,YACA,yBAAKA,UAAU,mBACbO,EAAQ,2BAAIA,EAAJ,KAAiB,OAG/B,uBAAGP,UAAU,yBAAb,4BAA8D,kBAAC,IAAD,CAAMC,GAAG,UAAT,gB,QCzDvEiF,EAfM,SAAC,GAAD,IAAYC,EAAZ,EAAEC,UAAuBC,EAAzB,oCACjB,kBAAC,IAAD,iBACIA,EADJ,CAEAC,OAAQ,SAAAlG,GACJ,OAAIN,IAGO,kBAACqG,EAAc/F,GAFf,kBAAC,IAAD,CAAUa,GAAG,gBCyEjBsF,MApEf,WAAe,MAGuClG,oBAAS,GAHhD,mBAGPmG,EAHO,KAGcC,EAHd,KAYb,OANAlG,qBAAU,WZWD,IAAImG,SAAQ,SAAAC,GACfjI,EAAYkI,mBAAmBD,MYXnBnG,MAAK,SAAAC,GACnBgG,EAAuBhG,UAII,IAAxB+F,EACL,kBAAC,IAAD,KACE,yBAAKxF,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAc6F,OAAK,EAACC,KAAK,IAAIV,UAAWd,IACxC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASV,UAAWW,IACtC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAO,YAAYV,UAAWY,OAK/C,yBAAKhG,UAAU,UACX,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACnB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACnB,yBAAKA,UAAU,aAInB,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACnB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACnB,yBAAKA,UAAU,aAInB,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACnB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACnB,yBAAKA,UAAU,aAInB,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACnB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACnB,yBAAKA,UAAU,gBCvE/BiG,IAASX,OACP,kBAAC,IAAMY,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3be4d4c8.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\nimport 'firebase/storage'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC9nn1ezQ1EGSjkMnYHURS50ZKiN3DDeUM\",\n    authDomain: \"dynamo-gram.firebaseapp.com\",\n    databaseURL: \"https://dynamo-gram.firebaseio.com\",\n    projectId: \"dynamo-gram\",\n    storageBucket: \"dynamo-gram.appspot.com\",\n    messagingSenderId: \"358836993331\",\n    appId: \"1:358836993331:web:d1eb9ff8053209afa15246\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n\n  const projectFirestore = firebase.firestore()\n  const projectStorage =  firebase.storage()\n  const projectAuth = firebase.auth()\n  const timeStamp= firebase.firestore.FieldValue.serverTimestamp;\n\n\n  export {projectFirestore, projectStorage,projectAuth,  timeStamp}","import {projectFirestore, projectAuth} from '../firebase/config'\n\n// Login authentication\nexport const login = (email, password) =>{\n    return projectAuth.signInWithEmailAndPassword(email,password)\n}\n\n// Logout of the authntication\nexport const logout = () =>{\n    return projectAuth.signOut()\n}\n\n// Register the user\nexport const register = async (email, password) =>{\n    await projectAuth.createUserWithEmailAndPassword(email, password)\n    \n}\n\n// Function to get additional data of a user when registering\nexport const addUserDetails = (firstName, lastName) =>{\n    if(!projectAuth.currentUser){\n        alert(\"Not Authorized\")\n    }\n    return projectFirestore.doc(`users/${projectAuth.currentUser.uid}`).set({\n        firstName:firstName,\n        lastName:lastName,\n        intials:firstName[0]+lastName[0]\n    })\n}\n\n// Set the fetching of data from firebase when firebase is initialize\nexport const isInitialized = () =>{\n    return new Promise(resolve =>{\n        projectAuth.onAuthStateChanged(resolve)\n    })\n}\n\n// Get the current logged in user\nexport const getCurrentUser = () =>{\n    return projectAuth.currentUser &&  projectAuth.currentUser.uid\n}\nexport const getInitials = async () =>{\n    const initials =projectAuth.currentUser  && await projectFirestore.doc(`users/${projectAuth.currentUser.uid}`).get()\n    return projectAuth.currentUser &&  initials.get(\"intials\")\n}\n\nexport const getUserDetails = async () =>{\n    const firstName =projectAuth.currentUser  && await projectFirestore.doc(`users/${projectAuth.currentUser.uid}`).get()\n    return projectAuth.currentUser &&  firstName.get(\"firstName\")\n}","import React, { useEffect, useState } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { logout, getInitials, getCurrentUser } from '../../hooks/useAuth';\n\n\n\nconst Title = (props) => {\n\n  // Get the logged in user initals\n  const [initials, setInitals] = useState('')\n\n\n\n  useEffect(()=>{\n    getInitials().then(val =>{\n      setInitals(val)\n    })\n  })\n\n  \n\n  const logoutUser = async () =>{\n    await logout()\n    props.history.push(\"/login\")\n  }\n\n\n  const links = getCurrentUser() ? \n  <ul id=\"nav-mobile\" className=\"right\">\n    <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{initials ? initials: null}</NavLink></li>\n    <li><a onClick={logoutUser}>Sign Out</a></li>\n  </ul>\n   :<ul id=\"nav-mobile\" className=\"right\">\n      <li><NavLink to=\"/login\">Login</NavLink></li>\n      <li><NavLink to=\"/register\">SignUp</NavLink></li>\n    </ul>\n\n  return (\n    <div className=\"title\">\n      <nav className=\"nav-wrapper\">\n        <NavLink to=\"/\" className=\"brand-logo left\">DynamoGram</NavLink>\n        {links}\n      </nav>\n    </div>\n  )\n}\n\nexport default withRouter(Title);","import React,{useState,useEffect, Fragment} from 'react'\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase/config'\nimport { getCurrentUser, getUserDetails } from './useAuth'\n\n\nfunction useStorage(file) {\n    // set the state of the file\n    const [progress, setProgress] = useState(0)\n    const [error, setError ]= useState(null)\n    const [url,setUrl ] = useState(null)\n\n    \n\n    useEffect(()=>{\n        // refernce the file name in the storage\n        const storageRef = projectStorage.ref(file.name)\n        const collectionRef = projectFirestore.collection('images')\n        const currentUser = getCurrentUser()\n        const firstName = getUserDetails()\n\n        // Event handler on(state_changed) successful,progress\n        storageRef.put(file).on('state_changed',(snap) =>{\n            // perentage of the progress\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage)\n        }, (err) => {\n            // incase of an error\n            setError(err)\n        }, async () =>{\n            // make async request to get the url of the image\n            const url =await storageRef.getDownloadURL()\n            const createdAt = timeStamp()\n            const uid = currentUser\n\n            collectionRef.add({url:url, createdAt,uid})\n            setUrl(url)\n        });\n\n    },[file])\n\n    return { progress, url, error}\n}\n\nexport default useStorage\n","import React,{useEffect} from 'react'\nimport useStorage from '../hooks/useStorage'\nimport { motion } from 'framer-motion'\n\nfunction ProgressBar({file, setFile}) {\n    // retrieve the progress and files in the useStorage()\n    const {progress, url} = useStorage(file)\n\n    // set the progress to null by setting the  setFile to null to remove the bar after u have a full upload\n    useEffect(() => {\n        if(url){\n            setFile(null)\n        }\n    },[url, setFile])\n    console.log(progress,url)\n    return (\n        <motion.div className=\"progress-bar\" initial={{width: 0}} animate={{width:progress + \"%\"}}>\n        </motion.div>\n    )\n}\n\nexport default ProgressBar\n","import React,{Fragment, useState} from 'react'\nimport ProgressBar from './ProgressBar'\n\nfunction UploadForm() {\n\n    const [file, setFile] = useState(null)\n    const [error, setError] = useState(null)\n    // declare the allowed image files\n    const types = ['image/png', 'image/jpeg', 'image/jpg']\n\n    const changePhoto = e =>{\n        let selected = e.target.files[0]\n        // set the file to state if its selected\n        if(selected && types.includes(selected.type)){\n            setFile(selected)\n            setError('')\n        }else{\n            setFile(null)\n            setError('Invalid file! Select only png or jpg or jpeg images')\n        }\n\n    }\n    return (\n        <Fragment>\n            <form>\n                <label className=\"image-label\">\n                    <input type=\"file\" className=\"img-input\" onChange={changePhoto} className=\"image-input\"/>\n                    <span>+</span>\n                </label>\n                <div className=\"ouput\">\n                    {error && <div className=\"error\">{error}</div>}\n                    {file && <div>{file.name}</div>}\n                    {file && <ProgressBar file={file} setFile={setFile}/>}\n                </div>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default UploadForm\n","import {useEffect, useState } from'react'\nimport {projectFirestore} from '../firebase/config'\nimport { getCurrentUser } from './useAuth'\n\n\nconst useFirestore = (collection) => {\n\n    const [docs,setDocs] = useState([])\n\n    useEffect(() => {\n        // Get the collection passed in above.\n        const unsub= projectFirestore.collection(collection)\n            // oredr the collection wth time in descending order\n            .orderBy('createdAt','desc')\n            // Get the snapshot of new data in the collection as snapshot\n            .onSnapshot((snap)=>{\n                let documents = [];\n                snap.forEach(doc => {\n                    // Return the only data by the current user\n                    if(getCurrentUser() === doc.data().uid){\n                        documents.push({...doc.data(), id:doc.id})\n                   }\n                    \n                });\n            // Add the documents to the docs\n            setDocs(documents)\n            })\n        // clean up the function when component is not used\n        return () => unsub()\n    }, [collection])\n\n    return {docs}\n\n}\n\nexport default useFirestore","import React,{useState, useEffect} from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\nimport { getCurrentUser,getInitials,getUserDetails } from '../hooks/useAuth';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore('images');\n  // const uid = docs.map(doc =>{\n  //   return doc.uid\n  // })\n  // console.log(uid)\n\n  return (\n    <div className=\"img-grid\">\n      {docs && docs.map(doc => (\n        <motion.div className=\"img-wrap\" key={doc.id} \n          layout\n          whileHover={{ opacity: 1 }}s\n          onClick={() => setSelectedImg(doc.url)}\n        >\n          <motion.img src={doc.url} alt=\"uploaded pic\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1 }}\n          />\n        </motion.div>\n      ))}\n    </div>\n  )\n}\n\nexport default ImageGrid;\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  }\n\n  return (\n    <motion.div className=\"backdrop\" onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img src={selectedImg} alt=\"enlarged pic\" \n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  )\n}\n\nexport default Modal;","import React,{Fragment, useState} from 'react'\nimport Title from '../Navbar/Title'\nimport UploadForm from '../UploadForm'\nimport ImageGrid from '../ImageGrid'\nimport Modal from '../Modal'\n\n\n\nfunction Dashboard() {\n    // Get the state of the image to pass it in the modal\n    const [selectedImg, setSelectedImg] = useState(null)\n\n    return (\n        <Fragment>\n            <Title/>\n            <div className=\"title\">\n                <h2>Your Pictures</h2>\n                <p>Welcome to DynamoGram, create you own photo album.</p>\n            </div>\n            <UploadForm/>\n            <ImageGrid setSelectedImg={setSelectedImg}/>\n            {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>}\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","import React, { Fragment,useState } from 'react'\nimport {Link, withRouter, Redirect} from 'react-router-dom'\nimport Title from '../Navbar/Title'\nimport { login, logout, getCurrentUser} from '../../hooks/useAuth'\n\nfunction SignIn(props) {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState('')\n    const [error, setError ] = useState(null)\n\n    // onChange on the value of the input\n    const onChange= e =>{\n        const {name , value} = e.currentTarget\n        if(name === 'email'){\n            setEmail(value)\n        } else if(name === 'password'){\n            setPassword(value)\n        }\n    }\n\n    // Submt the login details\n\n    const onSubmit = async (e) =>{\n        e.preventDefault()\n        \n        try{\n            await login(email, password)\n            props.history.replace(\"/\")\n        }catch(error){\n            setError(error.message)\n        }\n\n        \n    }\n\n    // if(!getCurrentUser()){\n    //     console.log(\"User is unauthenticated!\")\n    //     props.history.replace(\"/login\")\n    //     return null\n    //   }\n    return (\n        \n        <Fragment>\n        <Title/>\n        <div className=\"container\">\n            <h4 className=\"center mr-4\">Welcome Back</h4>\n            <form className=\"white\" onSubmit={onSubmit}>\n                <div className=\"input-field \">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" className=\"form-control\" value={email} onChange={onChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" className=\"form-control\"  value={password} onChange={onChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    <div className=\"red-text center\">\n                    { error ? <p>{ error } </p>: null}\n                    </div>\n                </div>\n                <p className=\"text-muted text-small\">Don't  have an account? <Link to=\"/register\">Register</Link></p>\n            </form>\n        </div>\n        </Fragment>\n    )\n}\n\nexport default withRouter(SignIn) \n","import React, { Fragment, useState } from 'react'\nimport {Link, withRouter, Redirect} from 'react-router-dom'\nimport Title from '../Navbar/Title'\nimport { register, addUserDetails, getCurrentUser} from '../../hooks/useAuth'\n\n\nfunction SignUp(props) {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState('')\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [error, setError ] = useState(null)\n\n    // onChange on the value of the input\n    const onChange= e =>{\n        const {name , value} = e.currentTarget\n        if(name === 'email'){\n            setEmail(value)\n        } else if(name === 'password'){\n            setPassword(value)\n        } else if (name===\"firstName\"){\n            setFirstName(value)\n        } else if (name === \"lastName\"){\n            setLastName(value)\n        }\n    }\n\n    // Submt the login details\n\n    const onSubmit = async (e) =>{\n        e.preventDefault()\n    \n        try{\n            await register(email,password)\n            await addUserDetails(firstName, lastName)\n            props.history.replace('/')\n\n            \n        }catch(error){\n            setError(error.message)\n        }\n    }\n\n    // if a user is authenticated redirect to dashboard\n    // if (getCurrentUser){\n    //     return <Redirect to=\"/\"/>\n    // }\n\n    return (\n        <Fragment>\n            <Title/>\n            <div className=\"container\">\n                    <h4 className=\"center mr-4\">Register</h4>\n                    <form className=\"white\" onSubmit={onSubmit}>\n                    <div className=\"input-field \">\n                            <label htmlFor=\"firstName\">First Name</label>\n                            <input type=\"text\" name=\"firstName\" className=\"form-control\"  value={firstName} onChange={onChange}/>\n                        </div>\n                        <div className=\"input-field \">\n                            <label htmlFor=\"lastName\">Last Name</label>\n                            <input type=\"text\" name=\"lastName\" className=\"form-control\" value={lastName} onChange={onChange}/>\n                        </div>\n                        <div className=\"input-field \">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" name=\"email\" className=\"form-control\"  value={email} onChange={onChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" name=\"password\" className=\"form-control\"  value={password}  onChange={onChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Register</button>\n                            <div className=\"red-text center\">\n                            { error ? <p>{error} </p>: null}\n                            </div>\n                        </div>\n                        <p className=\"text-muted text-small\">Already have an account? <Link to=\"/login\">Login</Link></p>\n                    </form>\n                </div>\n            </Fragment>\n    )\n}\n\nexport default withRouter(SignUp)\n","import React from 'react'\nimport {Route,Redirect } from 'react-router-dom'\nimport { getCurrentUser } from '../../hooks/useAuth'\n\n\nconst PrivateRoute = ({component:Component,...rest}) =>(\n    <Route\n    {...rest}\n    render={props=>{\n        if(!getCurrentUser()){\n            return <Redirect to=\"/login\"></Redirect>\n        } else{\n            return <Component {...props}/>\n        }\n    }}\n    />\n)\n    \n\n\nexport default PrivateRoute","import React,{ useState, useEffect} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\n\n\nimport Title from './comps/Navbar/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport useFirestore from './hooks/useFirestore';\nimport Dashboard from './comps/layout/Dashboard';\nimport SignIn from './comps/auth/SignIn';\nimport SignUp from './comps/auth/SignUp';\nimport {isInitialized } from './hooks/useAuth'\nimport PrivateRoute from './comps/auth/PrivateRoute';\n\nfunction App() {\n\n  //  Check if firebase is loaded or still loading\n  const[firebaseInitialized, setFirebaseInitialized]= useState(false)\n\n  // change the value of firebase intialized by using useEffect\n  useEffect(()=>{\n    isInitialized().then(val => {\n      setFirebaseInitialized(val)\n    })\n  })\n\n  return firebaseInitialized !== false ? (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Dashboard}/>\n          <Route exact path=\"/login\" component={SignIn}/>\n          <Route exact path = \"/register\" component={SignUp} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n    // if the firebase is still waiting for data use a loader\n  ) : <div className=\"loader\">\n          <div className=\"preloader-wrapper big active center\">\n            <div className=\"spinner-layer spinner-blue\">\n              <div className=\"circle-clipper left\">\n                <div className=\"circle\"></div>\n              </div><div className=\"gap-patch\">\n                <div className=\"circle\"></div>\n              </div><div className=\"circle-clipper right\">\n                <div className=\"circle\"></div>\n              </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-red\">\n              <div className=\"circle-clipper left\">\n                <div className=\"circle\"></div>\n              </div><div className=\"gap-patch\">\n                <div className=\"circle\"></div>\n              </div><div className=\"circle-clipper right\">\n                <div className=\"circle\"></div>\n              </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-yellow\">\n              <div className=\"circle-clipper left\">\n                <div className=\"circle\"></div>\n              </div><div className=\"gap-patch\">\n                <div className=\"circle\"></div>\n              </div><div className=\"circle-clipper right\">\n                <div className=\"circle\"></div>\n              </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-green\">\n              <div className=\"circle-clipper left\">\n                <div className=\"circle\"></div>\n              </div><div className=\"gap-patch\">\n                <div className=\"circle\"></div>\n              </div><div className=\"circle-clipper right\">\n                <div className=\"circle\"></div>\n              </div>\n            </div>\n          </div>\n      </div>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}